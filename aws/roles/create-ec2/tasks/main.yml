---
    - name: Creating North Virginia Server Availability Zone A
      ec2_instance:
        name: "AZONE-NGINX-SERVER"
        region: ap-southeast-1
        key_name: ansible-key
        vpc_subnet_id: subnet-d652a8b0
        instance_type: t2.micro
        security_group: nginx-secgroup
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 15
              delete_on_termination: true
        network:
          assign_public_ip: true
        user_data: "{{ lookup('file', 'user_dataa.sh') }}"
        image_id: ami-02b6d9703a69265e9
        tags:
          Environment: Nginx
      register: ec2_a
    
    - name: Creating North Virginia Server Availability Zone B
      ec2_instance:
        name: "BZONE-NGINX-SERVER"
        region: ap-southeast-1
        key_name: ansible-key
        vpc_subnet_id: subnet-46d63c0e
        instance_type: t2.micro
        security_group: nginx-secgroup
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        volumes:
          - device_name: /dev/sda1
            ebs:
              volume_size: 15
              delete_on_termination: true
        network:
          assign_public_ip: true
        user_data: "{{ lookup('file', 'user_datab.sh') }}"
        image_id: ami-02b6d9703a69265e9
        tags:
          Environment: Nginx
      register: ec2_b
    
    - name: Store EC2 instance IPs to Provision Against
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: ec2_instance_ips
      with_items:
          - "{{ ec2_a.instances }}"
          - "{{ ec2_b.instances }}"
    
    - name: Wait for Servers (Nginx) to Come Online
      wait_for:
        host: "{{ item.public_ip_address }}"
        port: 80
        timeout: 180
      with_items:
          - "{{ ec2_a.instances }}"
          - "{{ ec2_b.instances }}"
    
    - name: Create Load Balancer
      ec2_elb_lb:
        name: nginx-load-balancer
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        state: present
        security_group_names: lb-secgroup
        region: ap-southeast-1
        zones:
          - ap-southeast-1a
          - ap-southeast-1b
        cross_az_load_balancing: "yes"
        listeners:
          - protocol: tcp
            load_balancer_port: 80
            instance_port: 80
        health_check:
          ping_protocol: tcp
          ping_port: 80
          response_timeout: 5
          interval: 10
          unhealthy_threshold: 10
          healthy_threshold: 3
      register: elb
    
    - name: Register Servers on the Load Balancer
      ec2_elb:
        state: present
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        ec2_elbs: nginx-load-balancer
        region: ap-southeast-1
        instance_id: "{{ item.instance_id }}"
      with_items:
          - "{{ ec2_a.instances }}"
          - "{{ ec2_b.instances }}"
      
          
    